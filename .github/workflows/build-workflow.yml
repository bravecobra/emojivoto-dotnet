name: Development workflow

on: [push]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true

permissions:
  contents: write
  discussions: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: |
        git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git fetch --prune --unshallow

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 7.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
          versionSpec: '5.x'
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: true

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15

    - name: Build .NET solution
      env:
        SemVer: ${{ steps.gitversion.outputs.semVer }}
      run: |
        dotnet --version
        dotnet build ./EmojiVoto.sln --configuration Release

    - name: Test .NET solution
      run: |
        dotnet --version
        dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover ./EmojiVoto.sln --configuration Release

    - name: CodeCov
      uses: codecov/codecov-action@v1

  publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - svcProjectName: src/EmojiSvc
            svcDockerName: bravecobra/emoji-svc
          - svcProjectName: src/EmojiVoting
            svcDockerName: bravecobra/emoji-voting-svc
          - svcProjectName: src/EmojiUI
            svcDockerName: bravecobra/emoji-ui-svc
          - svcProjectName: src/EmojiVoteBot
            svcDockerName: bravecobra/emoji-votebot
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: |
        git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git fetch --prune --unshallow

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 7.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
          versionSpec: '5.x'
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: true

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ matrix.svcDockerName }}
        flavor: |
          latest=false
        tags: |
          type=raw,enable=${{ github.ref == 'refs/heads/develop' }},value=latest
          type=raw,enable=${{ github.ref == 'refs/heads/master' }},value=stable
          type=semver,pattern={{version}},value=${{ steps.gitversion.outputs.semVer }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push ${{ matrix.svcProjectName }} image
      uses: docker/build-push-action@v2
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' ||  contains(github.ref, 'refs/tags') || contains(github.ref, 'refs/heads/release') || contains(github.ref, 'refs/heads/hotfix')
      env:
        SemVer: ${{ steps.gitversion.outputs.semVer }}
      with:
        context: .
        file: ${{ matrix.svcProjectName }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    name: Generate Release
    needs: [publish]
    steps:
    - name: Build Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        discussion_category_name: Announcements
        append_body: true
